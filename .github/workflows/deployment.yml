name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

env:
  AWS_REGION: 'eu-north-1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.stage || 'dev' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Plan
      run: terraform plan -var="stage=${{ github.event.inputs.stage || 'dev' }}" -var="key_name=${{ vars.AWS_KEY_PAIR }}" -var="s3_bucket_name=techeazy-logs-devops"
      
    - name: Terraform Apply
      run: terraform apply -auto-approve -var="stage=${{ github.event.inputs.stage || 'dev' }}" -var="key_name=${{ vars.AWS_KEY_PAIR }}" -var="s3_bucket_name=techeazy-logs-devops"
      
    - name: Get ALB DNS
      id: alb
      run: echo "dns=$(terraform output -raw alb_dns)" >> $GITHUB_OUTPUT
      
    - name: Health Check
      run: |
        echo "Waiting for application to be healthy..."
        timeout 300 bash -c 'until curl -f http://${{ steps.alb.outputs.dns }}/health; do sleep 10; done'
        echo "Application is healthy!"
        
    - name: Deployment Summary
      run: |
        echo "ðŸš€ Deployment Complete!"
        echo "Stage: ${{ github.event.inputs.stage || 'dev' }}"
        echo "ALB DNS: ${{ steps.alb.outputs.dns }}"
        echo "Application URL: http://${{ steps.alb.outputs.dns }}/"
